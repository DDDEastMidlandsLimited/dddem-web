name: DDDEMWeb Deploy

on:
  push:
    branches:
      - main

jobs:
  linux:
    name: Linux build on node ${{ matrix.node_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set Node.js version ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install packages
        run: npm install

      - name: Run Tests
        run: npm run test

      - name: Run build
        run: npm run build

      - name: Run Export
        run: npm run export

      - name: Run pa11y
        run: npm run pa11y

      - name: Upgrade Pip
        run: sudo pip install --upgrade pip

      - name: Install AWS CLI
        run: pip install --user awscli

      - name: Configure AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY"
          aws configure set aws_secret_access_key "$AWS_SECRET_KEY"
          aws configure set region eu-west-2
          aws configure set output json

      - name: Deploy To S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          aws s3 sync ./out s3://www.dddeastmidlands.com --delete

      - name: Invalidate Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID}}
        run: |
          aws cloudfront create-invalidation --distribution-id "$DISTRIBUTION_ID" --paths "/*"
